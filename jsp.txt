템플릿 데이터- 그대로 출력문으로 바뀜 

지시자-
각각의 속성에 따라서 특정 자바 코드로 바뀜 

<% %>
자바 코드를 넣을 때 
스크립트릿은 그대로 복사한다. 

<%! %>
 클래스 선언부에 들어갈 변수 또는 메소드 선언
jsp선언문을 그대로 가져옴

<%= %>
결과를 반환하는 자바코드 
ex> "<%=v1%>" = out.print(v1); 
파라미터로 작성할 수 있는 자바코드가 가능하다.

뷰-
서블릿에서 뷰 분리해주기
서블릿->컨트롤러+모델+뷰 역할을 다 함(1인 기업)

뷰 분리-화면출력을 jsp에게 위임한다. 

값 객체-데이터 수송 객체-DTO(data transfer object)

/*
SET은 변수값을 할당하는 목적의 함수이기 때문에 인자를 받아야한다
GET은 변수값을 반환하는 목적이기 때문에 return이 필요하다.
*/

포워딩-
요청받은 서블릿(A)이 위임한 서블릿(B)의 작업을 포함하지 않는 것
*에러jsp

인클루딩-
요청받은 서블릿(A)이 위임한 서블릿(B)의 작업을 포함하는 것
요청 배달자 RequestDispatcher("/member/MemberList "); 
rd.include(request,response);

데이터보관소

HttpSession-브라우저에서 최초로 ServletCotain에 요청할 때 생성
일정 시간동안 요청이 없으면 자동으로 세션은 무효화 
세션 ID를 통해 사용자 별 세션 식별 됨

ServletRequest-클라이언트 요청이 들어올 때 생성, 응답까지 유지
요청을 처리하는 동안 서블릿끼리 공유해야 할 데이터가 있다면 적합
포워드,인클루드 서블릿끼리 데이터 공유할때 

jspContext- 요청을 수행할 때 jsp가 있다면 실행, 
태그 핸들러와 데이터를 공유할 때 사용

Servlet Context 

AppInitServlet 
다른 서블릿이 공통으로 사용하는 자원을 주는 역할의 서블릿
클라이언트가 요청하지 않아도 자동으로 실행- servlet-mapping X
대신 웹 애플리케이션 시작 시 서블릿 객체 생성 및 초기화 - <load on startup>1</load on startup>
"1" >서블릿을 생성, 초기화하는 순서, 낮은값부터 처리



HttpSession 무효화
session invalidate();







